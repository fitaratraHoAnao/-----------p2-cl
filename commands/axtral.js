const axios = require('axios');
const sendMessage = require('../handles/sendMessage'); // Importer la fonction sendMessage

module.exports = async (senderId, prompt) => {
Â Â Â  try {
Â Â Â Â Â Â Â  // Envoyer un message de confirmation que le message a Ã©tÃ© reÃ§u
Â Â Â Â Â Â Â  await sendMessage(senderId, "ðŸŽ©âœ¨ Un peu de magie en prÃ©parationâ€¦ âœ¨ðŸŽ©");

Â Â Â Â Â Â Â  // Appeler l'API avec le prompt de l'utilisateur
Â Â Â Â Â Â Â  const apiUrl = `https://api.kenliejugarap.com/prefind/?question=${encodeURIComponent(prompt)}`;
Â Â Â Â Â Â Â  const response = await axios.get(apiUrl);

Â Â Â Â Â Â Â  // RÃ©cupÃ©rer la rÃ©ponse et la diviser en morceaux si elle est trop longue
Â Â Â Â Â Â Â  const fullReply = response.data.response; // RÃ©ponse complÃ¨te de l'API
Â Â Â Â Â Â Â  const chunkSize = 2000; // Taille maximum de chaque message (par exemple, 2000 caractÃ¨res)
Â Â Â Â Â Â Â  const chunks = [];

Â Â Â Â Â Â Â  // Diviser le texte en morceaux
Â Â Â Â Â Â Â  for (let i = 0; i < fullReply.length; i += chunkSize) {
Â Â Â Â Â Â Â Â Â Â Â  chunks.push(fullReply.slice(i, i + chunkSize));
Â Â Â Â Â Â Â  }

Â Â Â Â Â Â Â  // Envoyer chaque morceau avec un dÃ©lai
Â Â Â Â Â Â Â  for (const chunk of chunks) {
Â Â Â Â Â Â Â Â Â Â Â  await sendMessage(senderId, chunk);
Â Â Â Â Â Â Â Â Â Â Â  await new Promise(resolve => setTimeout(resolve, 1000)); // DÃ©lai de 1 seconde entre les envois
Â Â Â Â Â Â Â  }
Â Â Â  } catch (error) {
Â Â Â Â Â Â Â  console.error('Erreur lors de l\'appel Ã  l\'API:', error);

Â Â Â Â Â Â Â  // Envoyer un message d'erreur Ã  l'utilisateur en cas de problÃ¨me
Â Â Â Â Â Â Â  await sendMessage(senderId, "DÃ©solÃ©, une erreur s'est produite lors du traitement de votre message.");
Â Â Â  }
};

// Ajouter les informations de la commande
module.exports.info = {
Â Â Â  name: "axtral",Â  // Le nom de la commande
Â Â Â  description: "Permet de discuter avec le âœ¨ Bot.",Â  // Description de la commande
Â Â Â  usage: "Envoyez 'axtral <message>' pour poser une question ou dÃ©marrer une conversation."Â  // Comment utiliser la commande
};

