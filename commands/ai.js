const axios = require('axios');
const sendMessage = require('../handles/sendMessage');

const BASE_API_URL = 'https://api.kenliejugarap.com/ministral-3b-paid/';
const DATE_API_URL = 'https://date-heure.vercel.app/date?heure=Madagascar';

module.exports = async (senderId, userText) => {
    const prompt = userText.slice(3).trim();

    if (!prompt) {
        await sendMessage(senderId, 'Veuillez fournir une question ou un sujet pour que je puisse vous aider.');
        return;
    }

    try {
        await sendMessage(senderId, "Message re√ßu, je pr√©pare une r√©ponse...");

        // Appeler l'API principale pour obtenir la r√©ponse √† la question
        const apiUrl = `${BASE_API_URL}?question=${encodeURIComponent(prompt)}&userId=${senderId}`;
        const aiResponse = await axios.get(apiUrl);
        const aiReply = aiResponse.data.response;

        // Appeler l'API de date pour obtenir la date et l'heure actuelles
        const dateResponse = await axios.get(DATE_API_URL);

        // V√©rifier et extraire la date et l'heure
        const currentDate = dateResponse.data.date_actuelle || "Date inconnue";
        const currentTime = dateResponse.data.heure_actuelle || "Heure inconnue";

        // Pr√©parer le message final
        const finalMessage = `
ü§ñ ‚Ä¢ ùóïùóøùòÇùóªùóºùóñùóµùóÆùòÅ
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ùìùó¨ùóºùòÇùóø ùó§ùòÇùó≤ùòÄùòÅùó∂ùóºùóª: ${prompt}
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚úÖ ùóîùóªùòÄùòÑùó≤ùóø: ${aiReply}
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚è∞ ùó•ùó≤ùòÄùóΩùóºùóªùòÄùó≤: ${currentDate}, ${currentTime} √† Madagascar

üá≤üá¨Lien Facebook de l'admin: ‚úÖhttps://www.facebook.com/bruno.rakotomalala.7549
        `;

        // Attendre avant d'envoyer le message final pour simuler un d√©lai naturel
        await new Promise(resolve => setTimeout(resolve, 2000));
        await sendMessage(senderId, finalMessage);
    } catch (error) {
        console.error('Erreur lors de l\'appel √† l\'API:', error);

        // Envoyer un message d'erreur √† l'utilisateur en cas de probl√®me
        await sendMessage(senderId, 'D√©sol√©, une erreur s\'est produite lors du traitement de votre question.');
    }
};

module.exports.info = {
    name: "ai",
    description: "Envoyer une question ou un sujet pour obtenir une r√©ponse g√©n√©r√©e par l'IA.",
    usage: "Envoyez 'ai <votre question>' pour obtenir une r√©ponse."
};
