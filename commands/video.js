const axios = require('axios');
const sendMessage = require('../handles/sendMessage'); // Importer la fonction sendMessage

module.exports = async (senderId, prompt) => {
    try {
        // Envoyer un message de confirmation que le message a √©t√© re√ßu
        await sendMessage(senderId, "üá≤üá¨ *Bruno* r√©dige sa r√©ponse... un instant, s'il vous pla√Æt üçü");

        // D√©terminer la requ√™te pour les vid√©os
        const query = encodeURIComponent(prompt);
        const apiUrl = `https://youtube-api-milay.vercel.app/recherche?titre=${query}`;

        // Envoyer un message de confirmation de recherche
        await sendMessage(senderId, "Recherche de vid√©os en cours...");

        // Appeler l'API de recherche de vid√©os
        const response = await axios.get(apiUrl);

        // R√©cup√©rer les vid√©os de la r√©ponse de l'API
        const videos = response.data.videos;

        // V√©rifier si des vid√©os sont retourn√©es
        if (videos && videos.length > 0) {
            // Prendre la premi√®re vid√©o pour l'envoi
            const video = videos[0];
            const videoUrl = video.url;

            // Envoyer un message de t√©l√©chargement de la vid√©o
            await sendMessage(senderId, "T√©l√©chargement de la vid√©o en cours...");

            // Envoyer la vid√©o en pi√®ce jointe
            await sendMessage(senderId, {
                attachment: {
                    type: 'video', // Sp√©cifier que c'est une vid√©o
                    payload: {
                        url: videoUrl, // URL de la vid√©o
                        is_reusable: true
                    }
                }
            });

            // Envoyer un message final une fois la vid√©o envoy√©e
            await sendMessage(senderId, "Voici la vid√©o que vous avez demand√©e !");
        } else {
            // Si aucune vid√©o n'est trouv√©e, informer l'utilisateur
            await sendMessage(senderId, "Aucune vid√©o trouv√©e pour votre recherche.");
        }
    } catch (error) {
        console.error("Erreur lors de la r√©cup√©ration des vid√©os:", error);

        // Envoyer un message d'erreur √† l'utilisateur en cas de probl√®me
        await sendMessage(senderId, "D√©sol√©, une erreur s'est produite lors du traitement de votre demande.");
    }
};

// Ajouter les informations de la commande
module.exports.info = {
    name: "video",  // Le nom de la commande
    description: "Recherche et envoie des vid√©os bas√©es sur le texte saisi.",  // Description de la commande
    usage: "Envoyez 'video <recherche>' pour rechercher des vid√©os."  // Comment utiliser la commande
};
